{"ast":null,"code":"var _jsxFileName = \"/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js\";\nimport React, { useState, useEffect } from 'react';\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async message => {\n    setIsLoading(true);\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: 'user'\n    }]);\n    try {\n      console.log('Sending message:', message);\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log('Response received');\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) {\n          console.log('Stream complete');\n          break;\n        }\n        const chunk = decoder.decode(value);\n        console.log('Received chunk:', chunk);\n        const lines = chunk.split('\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const eventData = JSON.parse(line.slice(6));\n              console.log('Parsed event data:', eventData);\n              if (eventData.fullResponse) {\n                setMessages(prevMessages => [...prevMessages, {\n                  text: eventData.fullResponse,\n                  sender: 'bot'\n                }]);\n              }\n            } catch (error) {\n              console.error('Error parsing event data:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, there was an error processing your request.\",\n        sender: 'bot'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    sendMessage('Hello, AI Assistant!');\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col h-screen max-w-2xl mx-auto p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"AI Assistant\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1 overflow-y-auto mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `mb-2 ${message.sender === 'user' ? 'text-right' : 'text-left'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `inline-block p-2 rounded-lg ${message.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, message.text)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyPress: e => e.key === 'Enter' && sendMessage(input),\n    placeholder: \"Type a message...\",\n    className: \"flex-1 p-2 border rounded-l-lg\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sendMessage(input),\n    className: \"p-2 bg-blue-500 text-white rounded-r-lg\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default ChatbotUI;","map":{"version":3,"names":["React","useState","useEffect","ChatbotUI","messages","setMessages","input","setInput","isLoading","setIsLoading","sendMessage","message","prevMessages","text","sender","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","reader","getReader","decoder","TextDecoder","done","value","read","chunk","decode","lines","split","line","startsWith","eventData","parse","slice","fullResponse","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","type","onChange","e","target","onKeyPress","placeholder","disabled","onClick"],"sources":["/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (message) => {\n    setIsLoading(true);\n    setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\n\n    try {\n      console.log('Sending message:', message);\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      console.log('Response received');\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          console.log('Stream complete');\n          break;\n        }\n        \n        const chunk = decoder.decode(value);\n        console.log('Received chunk:', chunk);\n        const lines = chunk.split('\\n');\n        \n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const eventData = JSON.parse(line.slice(6));\n              console.log('Parsed event data:', eventData);\n              if (eventData.fullResponse) {\n                setMessages(prevMessages => [\n                  ...prevMessages,\n                  { text: eventData.fullResponse, sender: 'bot' }\n                ]);\n              }\n            } catch (error) {\n              console.error('Error parsing event data:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: \"Sorry, there was an error processing your request.\", sender: 'bot' }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    sendMessage('Hello, AI Assistant!');\n  }, []);\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-2xl mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">AI Assistant</h1>\n      <div className=\"flex-1 overflow-y-auto mb-4\">\n        {messages.map((message, index) => (\n          <div key={index} className={`mb-2 ${message.sender === 'user' ? 'text-right' : 'text-left'}`}>\n            <span className={`inline-block p-2 rounded-lg ${message.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>\n              {message.text}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"flex\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage(input)}\n          placeholder=\"Type a message...\"\n          className=\"flex-1 p-2 border rounded-l-lg\"\n          disabled={isLoading}\n        />\n        <button\n          onClick={() => sendMessage(input)}\n          className=\"p-2 bg-blue-500 text-white rounded-r-lg\"\n          disabled={isLoading}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}