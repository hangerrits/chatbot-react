{"ast":null,"code":"var _jsxFileName = \"/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js\";\nimport React, { useState } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async message => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }, {\n        text: data.response,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }, {\n        text: \"Sorry, there was an error processing your request.\",\n        sender: 'bot'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSend = async () => {\n    if (input.trim()) {\n      setInput('');\n      await sendMessage(input);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col h-screen max-w-2xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-blue-600 text-white p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"AI Assistant\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex items-start space-x-2 ${message.sender === 'user' ? 'flex-row-reverse' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, message.sender === 'user' ? /*#__PURE__*/React.createElement(User, {\n    className: \"w-8 h-8 rounded-full bg-blue-100 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Bot, {\n    className: \"w-8 h-8 rounded-full bg-green-100 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `rounded-lg p-3 ${message.sender === 'user' ? 'bg-blue-100' : 'bg-green-100'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, message.text)))), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-200 rounded-lg p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-pulse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"AI is thinking...\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-t p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyPress: e => e.key === 'Enter' && handleSend(),\n    placeholder: \"Type a message...\",\n    className: \"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSend,\n    className: \"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Send, {\n    className: \"w-6 h-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default ChatbotUI;","map":{"version":3,"names":["React","useState","Send","Bot","User","ChatbotUI","messages","setMessages","input","setInput","isLoading","setIsLoading","sendMessage","message","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","prevMessages","text","sender","error","console","handleSend","trim","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","type","value","onChange","e","target","onKeyPress","placeholder","onClick","disabled"],"sources":["/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (message) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: message, sender: 'user' },\n        { text: data.response, sender: 'bot' }\n      ]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: message, sender: 'user' },\n        { text: \"Sorry, there was an error processing your request.\", sender: 'bot' }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      setInput('');\n      await sendMessage(input);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-2xl mx-auto\">\n      <div className=\"bg-blue-600 text-white p-4\">\n        <h1 className=\"text-2xl font-bold\">AI Assistant</h1>\n      </div>\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div key={index} className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n            <div className={`flex items-start space-x-2 ${message.sender === 'user' ? 'flex-row-reverse' : ''}`}>\n              {message.sender === 'user' ? (\n                <User className=\"w-8 h-8 rounded-full bg-blue-100 p-1\" />\n              ) : (\n                <Bot className=\"w-8 h-8 rounded-full bg-green-100 p-1\" />\n              )}\n              <div className={`rounded-lg p-3 ${message.sender === 'user' ? 'bg-blue-100' : 'bg-green-100'}`}>\n                {message.text}\n              </div>\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-200 rounded-lg p-3\">\n              <span className=\"animate-pulse\">AI is thinking...</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"border-t p-4\">\n        <div className=\"flex space-x-2\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n            placeholder=\"Type a message...\"\n            className=\"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <button \n            onClick={handleSend} \n            className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoading}\n          >\n            <Send className=\"w-6 h-6\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}