{"ast":null,"code":"var _jsxFileName = \"/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\nimport { marked } from 'marked';\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const eventSourceRef = useRef(null);\n  const sendMessage = async message => {\n    setIsLoading(true);\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: 'user'\n    }]);\n    setCurrentResponse('');\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            const eventData = JSON.parse(line.slice(6));\n            if (eventData.text) {\n              setCurrentResponse(prev => prev + eventData.text);\n            } else if (eventData.fullResponse) {\n              setMessages(prevMessages => [...prevMessages, {\n                text: eventData.fullResponse,\n                sender: 'bot',\n                citations: eventData.citations\n              }]);\n              setCurrentResponse('');\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, there was an error processing your request.\",\n        sender: 'bot'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSend = async () => {\n    if (input.trim()) {\n      setInput('');\n      await sendMessage(input);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col h-screen max-w-2xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-blue-600 text-white p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"AI Assistant\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex items-start space-x-2 ${message.sender === 'user' ? 'flex-row-reverse' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, message.sender === 'user' ? /*#__PURE__*/React.createElement(User, {\n    className: \"w-8 h-8 rounded-full bg-blue-100 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Bot, {\n    className: \"w-8 h-8 rounded-full bg-green-100 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `rounded-lg p-3 ${message.sender === 'user' ? 'bg-blue-100' : 'bg-green-100'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, message.sender === 'user' ? message.text : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: marked(message.text)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), message.citations && message.citations.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Citations:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, message.citations.map((citation, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, citation))))))))), currentResponse && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rounded-lg p-3 bg-green-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: marked(currentResponse)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))), isLoading && !currentResponse && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-200 rounded-lg p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"animate-pulse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"AI is thinking...\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-t p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyPress: e => e.key === 'Enter' && handleSend(),\n    placeholder: \"Type a message...\",\n    className: \"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSend,\n    className: \"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Send, {\n    className: \"w-6 h-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default ChatbotUI;","map":{"version":3,"names":["React","useState","useEffect","useRef","Send","Bot","User","marked","ChatbotUI","messages","setMessages","input","setInput","isLoading","setIsLoading","currentResponse","setCurrentResponse","eventSourceRef","sendMessage","message","prevMessages","text","sender","response","fetch","method","headers","body","JSON","stringify","ok","Error","reader","getReader","decoder","TextDecoder","done","value","read","chunk","decode","lines","split","line","startsWith","eventData","parse","slice","prev","fullResponse","citations","error","console","handleSend","trim","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","Fragment","dangerouslySetInnerHTML","__html","length","citation","idx","type","onChange","e","target","onKeyPress","placeholder","onClick","disabled"],"sources":["/Users/han/Documents/GitHub/ABC/legal assistant/React/my-chatbot-app/src/ChatbotUI.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\nimport { marked } from 'marked';\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState('');\n  const eventSourceRef = useRef(null);\n\n  const sendMessage = async (message) => {\n    setIsLoading(true);\n    setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\n    setCurrentResponse('');\n\n    try {\n      const response = await fetch('http://localhost:3001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        \n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n\\n');\n        \n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            const eventData = JSON.parse(line.slice(6));\n            if (eventData.text) {\n              setCurrentResponse(prev => prev + eventData.text);\n            } else if (eventData.fullResponse) {\n              setMessages(prevMessages => [\n                ...prevMessages,\n                { \n                  text: eventData.fullResponse, \n                  sender: 'bot',\n                  citations: eventData.citations \n                }\n              ]);\n              setCurrentResponse('');\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: \"Sorry, there was an error processing your request.\", sender: 'bot' }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      setInput('');\n      await sendMessage(input);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-2xl mx-auto\">\n      <div className=\"bg-blue-600 text-white p-4\">\n        <h1 className=\"text-2xl font-bold\">AI Assistant</h1>\n      </div>\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div key={index} className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\n            <div className={`flex items-start space-x-2 ${message.sender === 'user' ? 'flex-row-reverse' : ''}`}>\n              {message.sender === 'user' ? (\n                <User className=\"w-8 h-8 rounded-full bg-blue-100 p-1\" />\n              ) : (\n                <Bot className=\"w-8 h-8 rounded-full bg-green-100 p-1\" />\n              )}\n              <div className={`rounded-lg p-3 ${message.sender === 'user' ? 'bg-blue-100' : 'bg-green-100'}`}>\n                {message.sender === 'user' ? (\n                  message.text\n                ) : (\n                  <>\n                    <div dangerouslySetInnerHTML={{ __html: marked(message.text) }} />\n                    {message.citations && message.citations.length > 0 && (\n                      <div className=\"mt-2 text-sm text-gray-600\">\n                        <strong>Citations:</strong>\n                        <ul>\n                          {message.citations.map((citation, idx) => (\n                            <li key={idx}>{citation}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n        {currentResponse && (\n          <div className=\"flex justify-start\">\n            <div className=\"rounded-lg p-3 bg-green-100\">\n              <div dangerouslySetInnerHTML={{ __html: marked(currentResponse) }} />\n            </div>\n          </div>\n        )}\n        {isLoading && !currentResponse && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-200 rounded-lg p-3\">\n              <span className=\"animate-pulse\">AI is thinking...</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"border-t p-4\">\n        <div className=\"flex space-x-2\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n            placeholder=\"Type a message...\"\n            className=\"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <button \n            onClick={handleSend} \n            className=\"bg-blue-500 text-white rounded-full p-2 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoading}\n          >\n            <Send className=\"w-6 h-6\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}